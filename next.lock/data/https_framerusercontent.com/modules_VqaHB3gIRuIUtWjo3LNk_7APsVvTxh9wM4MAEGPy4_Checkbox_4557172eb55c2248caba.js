import{jsx as _jsx}from"react/jsx-runtime";import{useState,useEffect}from"react";import{addPropertyControls,ControlType,motion,RenderTarget}from"framer";import{colorTokentoValue}from"https://framer.com/m/framer/default-utils.js@^0.45.0";async function handleActions(callbacks){for(const cb of callbacks){if(!cb)continue;const value=await cb();if(value===false)break;}}/**
 * CHECKBOX
 *
 * @framerIntrinsicWidth 20
 * @framerIntrinsicHeight 20
 *
 * @framerSupportedLayoutWidth fixed
 * @framerSupportedLayoutHeight fixed
 */ export function Checkbox(props){let{activeBackground,onToggle,onCheck,onUncheck,isChecked,radius,topLeft,topRight,bottomRight,bottomLeft,isMixed,checkSize,color,inactiveBackground,inactiveBorder,activeBorder,hasBorder,borderWidth,transition,backgroundTransition,initialAnimation,disabled,joinType,strokeWidth}=props;const[checked,setChecked]=useState(isChecked);const borderRadius=isMixed?`${topLeft}px ${topRight}px ${bottomRight}px ${bottomLeft}px`:`${radius}px`;useEffect(()=>{setChecked(isChecked);},[isChecked]);initialAnimation=RenderTarget.current()!==RenderTarget.preview?false:initialAnimation;const inactiveBorderStyle=`${borderWidth}px solid ${colorTokentoValue(inactiveBorder)}`;const activeBorderStyle=`${borderWidth}px solid ${colorTokentoValue(activeBorder)}`;const animationBuffer=15;const pathLength=8.5;return(/*#__PURE__*/ _jsx("div",{style:containerStyle,"data-framer-highlight":!disabled,children:/*#__PURE__*/ _jsx(motion.div,{// @ts-ignore
style:{...checkboxStyle,borderRadius},initial:initialAnimation?{background:checked?colorTokentoValue(inactiveBackground):colorTokentoValue(activeBackground)}:false,animate:{background:checked?colorTokentoValue(activeBackground):colorTokentoValue(inactiveBackground),border:hasBorder?checked?activeBorderStyle:inactiveBorderStyle:"none"},transition:backgroundTransition,onTap:()=>{if(disabled)return;handleActions([()=>onToggle&&onToggle(!checked),onCheck,onUncheck,()=>setChecked(!checked),]);},children:/*#__PURE__*/ _jsx("svg",{viewBox:"0 0 12 12",style:{margin:1,width:`${checkSize}%`,height:`${checkSize}%`},children:/*#__PURE__*/ _jsx(motion.path,{d:"M3 6l2 2 4-4",fill:"transparent",strokeWidth:strokeWidth,stroke:color,strokeLinecap:"round",strokeLinejoin:joinType,strokeDasharray:pathLength+animationBuffer,transition:transition,initial:{strokeDashoffset:initialAnimation?checked?pathLength+animationBuffer:animationBuffer:checked?animationBuffer:pathLength+animationBuffer},// initial={false}
animate:{strokeDashoffset:checked?animationBuffer:pathLength+animationBuffer+3}})})})}));}Checkbox.defaultProps={height:20,width:20,text:"Get started!",activeBackground:"#0099ff",activeBorder:"#0066FF",inactiveBackground:"#EBEBEB",inactiveBorder:"#a5a5a5",hasBorder:false,radius:5,isChecked:true,borderWidth:1,strokeWidth:1.5,joinType:"round",checkSize:100,color:"white",initialAnimation:false,disabled:false,transition:{duration:0.15,ease:[0.12,0.23,0.5,1],type:"tween"},backgroundTransition:{duration:0.15,ease:[0.12,0.23,0.5,1],type:"tween"}};// Learn more: https://framer.com/api/property-controls/
addPropertyControls(Checkbox,{isChecked:{title:"Checked",type:ControlType.Boolean,defaultValue:true,enabledTitle:"Yes",disabledTitle:"No"},disabled:{title:"Disabled",type:ControlType.Boolean,enabledTitle:"Yes",disabledTitle:"No"},hasBorder:{title:"Border",type:ControlType.Boolean,enabledTitle:"Yes",disabledTitle:"No"},borderWidth:{title:"Width",type:ControlType.Number,defaultValue:Checkbox.defaultProps.borderWidth,hidden:({hasBorder})=>!hasBorder},activeBorder:{title:"Active",type:ControlType.Color,defaultValue:Checkbox.defaultProps.activeBackground,hidden:({hasBorder})=>!hasBorder},inactiveBorder:{title:"Inactive",type:ControlType.Color,defaultValue:Checkbox.defaultProps.inactiveBackground,hidden:({hasBorder})=>!hasBorder},activeBackground:{title:"Active",type:ControlType.Color,defaultValue:Checkbox.defaultProps.activeBackground},inactiveBackground:{title:"Inactive",type:ControlType.Color,defaultValue:Checkbox.defaultProps.inactiveBackground},color:{title:"Check",type:ControlType.Color,defaultValue:Checkbox.defaultProps.color},checkSize:{title:"Check Size",type:ControlType.Number,unit:"%",min:0,max:100,defaultValue:Checkbox.defaultProps.checkSize},joinType:{title:"Corner",type:ControlType.Enum,displaySegmentedControl:true,options:["miter","round"],optionTitles:["Square","Round"]},strokeWidth:{title:"Thickness",type:ControlType.Number,min:1,max:5,step:0.5,displayStepper:true},radius:{title:"Radius",type:ControlType.FusedNumber,defaultValue:Checkbox.defaultProps.radius,toggleKey:"isMixed",toggleTitles:["Radius","Radius per corner"],valueKeys:["topLeft","topRight","bottomRight","bottomLeft"],valueLabels:["TL","TR","BR","BL"],min:0},transition:{title:"Check",type:ControlType.Transition,defaultValue:Checkbox.defaultProps.transition},backgroundTransition:{title:"Fill",type:ControlType.Transition,defaultValue:Checkbox.defaultProps.transition},initialAnimation:{title:"On Load",type:ControlType.Boolean,enabledTitle:"Animate",disabledTitle:"Instant"},onToggle:{type:ControlType.EventHandler},onCheck:{type:ControlType.EventHandler},onUncheck:{type:ControlType.EventHandler}});const containerStyle={display:"flex",justifyContent:"center",alignItems:"center",height:"100%",width:"100%",position:"absolute",left:0,right:0,top:0,bottom:0};const checkboxStyle={width:"100%",height:"100%",borderRadius:6,display:"flex",justifyContent:"center",alignItems:"center",cursor:"pointer",WebkitTapHighlightColor:"rgba(0, 0, 0, 0)"};
export const __FramerMetadata__ = {"exports":{"Checkbox":{"type":"reactComponent","name":"Checkbox","slots":[],"annotations":{"framerSupportedLayoutWidth":"fixed","framerIntrinsicWidth":"20","framerIntrinsicHeight":"20","framerSupportedLayoutHeight":"fixed","framerContractVersion":"1"}},"CheckboxProps":{"type":"tsType","annotations":{"framerContractVersion":"1"}},"__FramerMetadata__":{"type":"variable"}}}
//# sourceMappingURL=./Checkbox.map