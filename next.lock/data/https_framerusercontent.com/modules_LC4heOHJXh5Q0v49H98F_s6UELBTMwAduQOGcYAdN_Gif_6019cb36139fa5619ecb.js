import{jsx as _jsx,jsxs as _jsxs}from"react/jsx-runtime";import{useState,useMemo,useEffect}from"react";import{addPropertyControls,ControlType,RenderTarget}from"framer";import*as urls from"https://framer.com/m/framer/default-urls.js@0.1.0";import{poweredByGiphy}from"https://framer.com/m/framer/gif-assets.js@0.1.0";import{emptyStateStyle,defaultEvents}from"https://framer.com/m/framer/default-utils.js@^0.45.0";let safeLocalStorage=undefined;try{if(typeof window!==undefined){safeLocalStorage=window.localStorage;}}catch(e){// happy linting!
}/**
 * GIF
 *
 * @framerIntrinsicWidth 200
 * @framerIntrinsicHeight 200
 *
 * @framerSupportedLayoutWidth fixed
 * @framerSupportedLayoutHeight fixed
 */ export function Gif({search,id,lockImage,radius,topLeft,topRight,bottomRight,bottomLeft,isMixed,onClick,onMouseEnter,onMouseLeave,onMouseDown,onMouseUp}){// @todo generate an id inline the component if it doesn't exist
const key=useMemo(()=>`gif_${id.includes("id_")?id.substring(3,id.length):id}`,[id]);const cache=useMemo(()=>{if(safeLocalStorage){return safeLocalStorage.getItem(key)?JSON.parse(safeLocalStorage.getItem(key)):{};}else return{};},[key]);const[url,setUrl]=useState(cache.imageUrl||null);const borderRadius=isMixed?`${topLeft}px ${topRight}px ${bottomRight}px ${bottomLeft}px`:`${radius}px`;if(RenderTarget.current()===RenderTarget.thumbnail)search="abstract";function setGif(term){const type="/gifs";const searchType=`/random?tag=`;const placeholder=`_key=${urls.giphyPlaceholder.replace(/[^a-zA-Z0-9 -]/g,"")}`;const searchTerm=term;const url=`${urls.giphyBase}${type}${searchType}${searchTerm}&api${placeholder}`;fetch(url).then(res=>{if(!res.ok){throw Error(res.statusText);}return res.json();}).then(res=>{setUrl(res.data.images.downsized_small.mp4);if(!safeLocalStorage)return;safeLocalStorage.setItem(key,JSON.stringify({search,imageUrl:res.data.images.downsized_small.mp4}));}).catch(err=>{});}useEffect(()=>{if(!lockImage||search!==cache.search)setGif(search);},[search,cache]);return search.length>0?/*#__PURE__*/ _jsxs("div",{onClick,onMouseDown,onMouseUp,onMouseEnter,onMouseLeave,style:{width:"100%",height:"100%",overflow:"hidden",backgroundColor:"#000",color:"#333",WebkitTapHighlightColor:"rgba(0, 0, 0, 0)",fontSize:"14px",WebkitMaskImage:"-webkit-radial-gradient(white, black)",borderRadius},children:[/*#__PURE__*/ _jsx("video",{autoPlay:true,loop:true,muted:true,controls:false,preload:"auto",playsInline:true,style:{width:"100%",height:"100%",objectFit:"cover",objectPosition:"50% 50%"},src:url},`#${true}`),"Your browser does not support HTML5 video."]}):/*#__PURE__*/ _jsx("div",{style:emptyStateStyle,onClick,onMouseEnter,onMouseLeave,children:/*#__PURE__*/ _jsx("img",{style:{width:80,maxWidth:"80%"},src:poweredByGiphy})});}// <img style={{ width: 80, maxWidth: "80%" }} src={assetUrl("./code/assets/powerByGiphyLight.png")} />
Gif.defaultProps={height:200,width:200,search:"",id:"",lockImage:true,radius:0};// Learn more: https://framer.com/api/property-controls/
addPropertyControls(Gif,{search:{type:ControlType.String,title:"Search",placeholder:"Search GIPHYâ€¦"},lockImage:{type:ControlType.Boolean,title:"Shuffle",enabledTitle:"No",disabledTitle:"Yes",defaultValue:true},radius:{title:"Radius",type:ControlType.FusedNumber,defaultValue:Gif.defaultProps.radius,toggleKey:"isMixed",toggleTitles:["Radius","Radius per corner"],valueKeys:["topLeft","topRight","bottomRight","bottomLeft"],valueLabels:["TL","TR","BR","BL"],min:0},...defaultEvents});Gif.displayName="GIF";
export const __FramerMetadata__ = {"exports":{"GifProps":{"type":"tsType","annotations":{"framerContractVersion":"1"}},"Gif":{"type":"reactComponent","name":"Gif","slots":[],"annotations":{"framerSupportedLayoutWidth":"fixed","framerSupportedLayoutHeight":"fixed","framerIntrinsicWidth":"200","framerIntrinsicHeight":"200","framerContractVersion":"1"}},"__FramerMetadata__":{"type":"variable"}}}
//# sourceMappingURL=./Gif.map